# I had issues with autodetect_column_names => "true", but will likely test it again to avoid maintaining all these column names long-term
# https://www.elastic.co/guide/en/logstash/current/plugins-filters-csv.html#plugins-filters-csv-autodetect_column_names

input {
  beats {
    port => 9600
  }
}


filter {
  if "threcon" in [tags] {
    mutate {
      lowercase => [ "message" ]
    }
  }

  if "arp" in [tags] {
    csv {
      columns => ["Host","DateScanned","ifIndex","InterfaceAlias","IPAddress","LinkLayerAddress","State","PolicyStore"]
    }
  }

  if "ads" in [tags] {
    csv {
      columns => ["Host","DateScanned","FileName","StreamName","StreamLength","StreamContent","Attributes","CreationTimeUtc","LastAccessTimeUtc","LastWriteTimeUtc"]
    }
  }

  if "autoruns" in [tags] {
    csv {
      columns => ["Host","DateScanned","Name","Caption","Command","Location","User","UserSID"]
    }
  }

  if "bitlocker" in [tags] {
    csv {
      columns => ["Host","DateScanned","MountPoint","EncryptionMethod","AutoUnlockEnabled","MetadataVersion","VolumeStatus","ProtectionStatus","LockStatus","EncryptionPercentage","WipePercentage","VolumeType","CapacityGB","KeyProtector"]
    }
  }

  if "certificates" in [tags] {
    csv {
      columns => ["Host","DateScanned","Path","Thumbprint","SendAsTrustedIssuer","DnsNameList","FriendlyName","Issuer","Subject","NotAfter","NotBefore","Algorithm"]
    }
  }

  if "computer" in [tags] {
    csv {
      columns => ["Host","DateScanned","BootDevice","BuildNumber","Caption","CurrentTimeZone","DataExecutionPrevention_32BitApplications","DataExecutionPrevention_Available","DataExecutionPrevention_Drivers","DataExecutionPrevention_SupportPolicy","Debug","Description","Distributed","EncryptionLevel","InstallDate","LastBootUpTime","LocalDateTime","MUILanguages","OSArchitecture","OSProductSuite","OSType","OperatingSystemSKU","Organization","OtherTypeDescription","PortableOperatingSystem","ProductType","RegisteredUser","ServicePackMajorVersion","ServicePackMinorVersion","Status","SuiteMask","SystemDevice","SystemDirectory","SystemDrive","Version","WindowsDirectory","AdminPasswordStatus","BootROMSupported","BootupState","ChassisBootupState","DNSHostName","DaylightInEffect","Domain","DomainRole","EnableDaylightSavingsTime","HypervisorPresent","Manufacturer","Model","NetworkServerModeEnabled","PrimaryOwnerContact","PrimaryOwnerName","SupportContactDescription","SystemSKUNumber","ThermalState","UserName","BIOSVersion","BIOSInstallDate","BIOSManufacturer","PrimaryBIOS","BIOSReleaseDate","SMBIOSBIOSVersion","SMBIOSMajorVersion","SMBIOSMinorVersion","SMBIOSPresent","SerialNumber","SystemBiosMajorVersion","SystemBiosMinorVersion","VirtualizationFirmwareEnabled"]
    }
  }

  if "dlls" in [tags] {
    csv {
      columns => ["Host","DateScanned","Id","ProcessName","Company","Product","Modules"]
    }
  }

  if "dns" in [tags] {
    csv {
      columns => ["Host","DateScanned","Status","RecordStatus","DataLength","Section","RecordResponse","TimeToLive","Type","RecordType","Data","Entry","Name"]
    }
  }

  if "drivers" in [tags] {
    csv {
      columns => ["Host","DateScanned","ProviderName","Driver","Version","Date","ClassDescription","DriverSignature","OriginalFileName"]
    }
  }

  if "envvars" in [tags] {
    csv {
      columns => ["Host","DateScanned","UserName","VariableName","VariableValue"]
    }
  }

  if "eventlogs" in [tags] {
    csv {
      columns => ["Host","DateScanned","TimeCreated","MachineName","UserId","ProcessId","LogName","Source","LevelDisplayName","EventId","OpcodeDisplayName","TaskDisplayName","Message","RecordId","RelatedActivityId","ThreadId","Version"]
    }
  }

  if "groupmembers" in [tags] {
    csv {
      columns => ["Host","DateScanned","UserDomain","UserName","SID","PrincipalSource","ObjectClass","GroupName","GroupDescription","GroupSID","GroupPrincipalSource","GroupObjectClass"]
    }
  }

  if "hardware" in [tags] {
    csv {
      columns => ["Host","DateScanned","Class","Caption","Description","DeviceID"]
    }
  }

  if "hosts" in [tags] {
    csv {
      columns => ["Host","DateScanned","IP","HostName","Comment"]
    }
  }

  if "hotfixes" in [tags] {
    csv {
      columns => ["Host","DateScanned","Operation","ResultCode","HResult","Date","Title","Description","UnmappedResultCode","ClientApplicationID","ServerSelection","ServiceID","UninstallationNotes","SupportUrl"]
    }
  }

  if "mac" in [tags] {
    csv {
      columns => ["Host","DateScanned","FileName","Mode","Bytes","Hash","LastWriteTimeUTC","LastAccessTimeUTC","CreationTimeUTC"]
    }
  }

  if "mru" in [tags] {
    csv {
      columns => ["Host","DateScanned","Key","Value","Data"]
    }
  }

  if "netadapters" in [tags] {
    csv {
      columns => ["Host","DateScanned","SystemName","InterfaceDescription","Name","MediaConnectionState","ifIndex","Speed","MacAddress","IPAddress","IPSubnet","DefaultIPGateway","DNSServerSearchOrder","MtuSize","PromiscuousMode"]
    }
  }

  if "netroute" in [tags] {
    csv {
      columns => ["Host","DateScanned","ifIndex","InterfaceAlias","DestinationPrefix","NextHop","RouteMetric","Protocol","Store","Publish","TypeOfRoute","RouteType"]
    }
  }

  if "processes" in [tags] {
    csv {
      columns => ["Host","DateScanned","CommandLine","Services","PercentProcessorTime","MemoryMB","BasePriority","Id","MainWindowHandle","MainWindowTitle","PriorityBoostEnabled","PriorityClass","PrivateMemorySize","PrivilegedProcessorTime","ProcessName","Responding","SessionId","StartTime","TotalProcessorTime","UserProcessorTime","Company","CPU","Description","FileVersion","Path","Product","ProductVersion","ModuleCount","ThreadCount","HandleCount"]
    }
  }

  if "recylcebin" in [tags] {
    csv {
      columns => ["Host","DateScanned","LinkType","Name","Length","Directory","IsReadOnly","Exists","FullName","CreationTimeUtc","LastAccessTimeUtc","LastWriteTimeUtc","PSIsContainer","Mode"]
    }
  }

  if "registry" in [tags] {
    csv {
      columns => ["Host","DateScanned","Key","Value","Data"]
    }
  }

  if "scheduledtasks" in [tags] {
    csv {
      columns => ["Host","DateScanned","Author","Description","SecurityDescriptor","Source","State","TaskName","TaskPath","URI","ActionsArguments","ActionsExecute","ActionsId","ActionsWorkingDirectory","TriggersId","TriggersDelay","TriggersEnabled","TriggersEndBoundary","TriggersExecutionTimeLimit","TriggersRepetitionDuration","TriggersRepetitionInterval","TriggersStartBoundary"]
    }
  }

  if "services" in [tags] {
    csv {
      columns => ["Host","DateScanned","AcceptPause","AcceptStop","Caption","CheckPoint","DelayedAutoStart","Description","DesktopInteract","DisconnectedSessions","DisplayName","ErrorControl","ExitCode","InstallDate","Name","PathName","ProcessId","ServiceSpecificExitCode","ServiceType","Started","StartMode","StartName","State","TagId","TotalSessions","WaitHint"]
    }
  }

  if "sessions" in [tags] {
    csv {
      columns => ["Host","DateScanned","SESSIONNAME","USERNAME","ID","STATE","TYPE","DEVICE"]
    }
  }

  if "shares" in [tags] {
    csv {
      columns => ["Host","DateScanned","Name","Path","DESCRIPTION","TrusteeName","TrusteeDomain","TrusteeSID","Type","AccessMask","SharePermission"]
    }
  }

  if "software" in [tags] {
    csv {
      columns => ["Host","DateScanned","Publisher","DisplayName","DisplayVersion","InstallDate","InstallSource","InstallLocation","PSChildName","HelpLink"]
    }
  }

  if "strings" in [tags] {
    csv {
      columns => ["Host","DateScanned","ProcessLocation","String"]
    }
  }

  if "tcpconnections" in [tags] {
    csv {
      columns => ["Host","DateScanned","LocalAddress","LocalPort","RemoteAddress","RemotePort","State","AppliedSetting","OwningProcess","Path"]
    }
  }

  if "tpm" in [tags] {
    csv {
      columns => ["Host","DateScanned","TpmPresent","TpmReady","ManufacturerId","ManufacturerName","ManufacturerVersion","ManagedAuthLevel","OwnerAuth","OwnerClearDisabled","AutoProvisioning","LockedOut","LockoutCount","LockoutMax","SelfTest","FirmwareVersionAtLastProvision"]
    }
  }

  if "threcon" in [tags] {
    truncate {
      fields => "DateScanned"
      length_bytes => 19
    }
    date {
      locale => "en"
      match => [ "DateScanned", "yyyy-MM-dd HH:mm:ss" ]
      target => "DateScanned"
      add_tag => [ "TimeMatched" ]
    }
  }
}


output {
  if "threcon" in [tags] { 
    stdout { codec => rubydebug } 
  }

  if "ads" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-ads-%{+YYYY.MM.dd}"
    }
  }

  if "autoruns" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-autoruns-%{+YYYY.MM.dd}"
    }
  }

  if "bitlocker" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-bitlocker-%{+YYYY.MM.dd}"
    }
  }

  if "certificates" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-certificates-%{+YYYY.MM.dd}"
    }
  }

  if "computer" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-computer-%{+YYYY.MM.dd}"
    }
  }

  if "dlls" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-dlls-%{+YYYY.MM.dd}"
    }
  }

  if "dns" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-dns-%{+YYYY.MM.dd}"
    }
  }

  if "drivers" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-drivers-%{+YYYY.MM.dd}"
    }
  }

  if "envvars" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-envvars-%{+YYYY.MM.dd}"
    }
  }

  if "eventlogs" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-eventlogs-%{+YYYY.MM.dd}"
    }
  }

  if "groupmembers" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-groupmembers-%{+YYYY.MM.dd}"
    }
  }

  if "hardware" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-hardware-%{+YYYY.MM.dd}"
    }
  }

  if "hosts" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-hosts-%{+YYYY.MM.dd}"
    }
  }

  if "hotfixes" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-hotfixes-%{+YYYY.MM.dd}"
    }
  }

  if "mac" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-mac-%{+YYYY.MM.dd}"
    }
  }

  if "mru" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-mru-%{+YYYY.MM.dd}"
    }
  }

  if "netadapters" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-netadapters-%{+YYYY.MM.dd}"
    }
  }

  if "netroute" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-netroute-%{+YYYY.MM.dd}"
    }
  }

  if "processes" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-processes-%{+YYYY.MM.dd}"
    }
  }

  if "recylcebin" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-recylcebin-%{+YYYY.MM.dd}"
    }
  }

  if "registry" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-registry-%{+YYYY.MM.dd}"
    }
  }

  if "scheduledtasks" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-scheduledtasks-%{+YYYY.MM.dd}"
    }
  }

  if "services" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-services-%{+YYYY.MM.dd}"
    }
  }

  if "sessions" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-sessions-%{+YYYY.MM.dd}"
    }
  }

  if "shares" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-shares-%{+YYYY.MM.dd}"
    }
  }

  if "softwtare" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-softwtare-%{+YYYY.MM.dd}"
    }
  }

  if "strings" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-strings-%{+YYYY.MM.dd}"
    }
  }

  if "tcpconnections" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-tcpconnections-%{+YYYY.MM.dd}"
    }
  }

  if "tpm" in [tags] {
    elasticsearch {
      hosts => ["localhost:9200"]
      index => "logs-endpoint-threcon-tpm-%{+YYYY.MM.dd}"
    }
  }
}
